# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project specific
audio_uploads/
logs/
*.db
*.sqlite3

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
Thumbs.db

# Git Account Management (Local only)
git-account-manager.sh
setup-git-aliases.sh
troubleshoot-git-accounts.sh
MULTIPLE_GITHUB_ACCOUNTS_CONCEPT_GUIDE.md
GIT_ACCOUNT_MANAGER_GUIDE.md
# Git Account Manager backup files
*.bak.*
git-account-manager.sh.bak.*

# Debug logs (Local only)
debug_logs/
backend/debug_logs/

# Built backend binaries (do not commit)
backend/bin/
backend/whisper_cache/
backend/build/
backend/dist/
backend/logs/
backend/audio_uploads/
backend/.pyinstaller_config/

# Desktop Electron build artifacts (do not commit)
desktop/node_modules/
desktop/dist/
desktop/*.zip
desktop/*.dmg
desktop/*.blockmap

# Test files (Local only)
test_*.py
check_*.py
*.aiff
*.wav
*.mp3
*.m4a
*.flac
*.ogg
*.aac
sample_*.wav
speech_*.wav
complaint.*
sales_*.wav
support_*.wav

# Local runtime data (desktop mode)
signalhub_data/
.tmp_*/
.tmp_live*/

# Frontend specific
frontend/node_modules/
frontend/.vite/
frontend/dist/
frontend/build/
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*
frontend/.pnpm-debug.log*
frontend/coverage/
frontend/.nyc_output
frontend/.next/
frontend/.nuxt/
frontend/.output/
frontend/.cache/
frontend/.parcel-cache/
frontend/.eslintcache
frontend/.stylelintcache
frontend/.swc/
frontend/dist-test/

# Cursor AI Development Files (Local only)
CURSOR_INSTRUCTIONS.md
DEVELOPMENT_GUIDELINES.md

# Documentation files (Local only)
AGENTS.md
README.md
*.md
docs/journal/
