"""GENERATED BY scripts/scaffold.ts -- TranscriptionShortClipResponse derived from schemas/transcription-short-clip-response.schema.json."""
from __future__ import annotations

from typing import Literal, Optional

from pydantic import BaseModel, ConfigDict, Field


class TranscriptionShortClipResponse(BaseModel):
    """Schema-aligned contract generated from docs/spec.md."""

    model_config = ConfigDict(extra="forbid", populate_by_name=True)

    ok: bool = Field(
        ...,
        description="Indicates whether the request was accepted or the last chunk processed successfully.",
    )
    jobId: str = Field(
        ...,
        description="Deterministic identifier for the fallback job (uuid-v4).",
    )
    clipId: str = Field(
        ...,
        description="Echoes the originating clip identifier.",
    )
    status: Literal["queued", "processing", "succeeded", "failed"] = Field(
        ...,
        description="Current lifecycle state for the fallback attempt.",
    )
    queuedAt: str = Field(
        ...,
        description="RFC 3339 timestamp of when the fallback job entered the queue.",
    )
    completedAt: Optional[str] = Field(
        None,
        description="RFC 3339 timestamp captured once the fallback finishes.",
    )
    errorMessage: Optional[str] = Field(
        None,
        description="Human-readable failure summary returned when status=failed.",
    )
    estimatedLatencyMs: Optional[int] = Field(
        None,
        description="Estimated processing latency communicated during queue acknowledgement.",
    )
